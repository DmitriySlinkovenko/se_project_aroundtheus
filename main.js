!function(){"use strict";var e=class{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}},t=class{constructor(e,t,s){this._name=e.name,this._link=e.link,this._templateSelector=t,this._handleImageClick=s}_setEventListeners(){this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__remove-button"),this._likeButton.addEventListener("click",(()=>this._handleLikeButton())),this._deleteButton.addEventListener("click",(()=>this._handleDeleteCard())),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}_handleDeleteCard(){this._element.remove()}_handleLikeButton(){this._likeButton.classList.toggle("card__like-button_active")}_getTemplate(){return document.querySelector(this._templateSelector).content.firstElementChild.cloneNode(!0)}generateCard(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".card__image"),this._cardTitle=this._element.querySelector(".card__title"),this._cardImage.src=this._link,this._cardTitle.textContent=this._name,this._cardImage.alt=this._name,this._setEventListeners(),this._element}};const s=document.querySelector(".profile__edit-button"),n=document.querySelector(".profile__add-button"),i=(document.querySelector("#input__image_title"),document.querySelector("#input__image_link"),document.querySelector("#profile-submit__form")),r=document.querySelector("#image-submit__form"),o={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__save-button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"};class a{constructor(e){this._modalElement=document.querySelector(e)}open(){this._modalElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscapeClose)}close(){this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscapeClose)}_handleEscapeClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._modalElement.querySelector(".modal__close-button").addEventListener("click",(()=>{this.close()})),this._modalElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()}))}}class l extends a{constructor(e,t){super(e),this._modalForm=this._modalElement.querySelector("form"),this._handleFormSubmit=t,this._inputList=this._modalElement.querySelectorAll(".form__input")}_getInputValues(){const e={};return this._inputList.forEach((t=>{let{name:s,value:n}=t;e[s]=n})),e}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._modalElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}}const c=new class{constructor(e){let{profileName:t,profileDescription:s}=e;this._profileName=document.querySelector(t),this._profileDescription=document.querySelector(s)}getUserInfo(){return this._user={name:this._profileName.textContent,description:this._profileDescription.textContent},this._user}setUserInfo(e){let{name:t,description:s}=e;this._profileName.textContent=t,this._profileDescription.textContent=s}}({profileName:".profile__title",profileDescription:".profile__subtitle"}),_=new class extends a{constructor(e){super(e),this._imageElement=this._modalElement.querySelector(".modal__card-preview_image"),this._imageTitle=this._modalElement.querySelector(".modal__preview_heading")}open(e){this._imageElement.src=e.link,this._imageTitle.textContent=e.name,this._imageElement.alt=e.name,super.open()}}("#preview-image-modal");_.setEventListeners();const m=(e,t)=>{_.open({name:e,link:t})},u=new l("#edit__modal",(function(e){let{name:t,description:s}=e;c.setUserInfo({name:t,description:s})}));u.setEventListeners(),s.addEventListener("click",(()=>{u.open();const e=c.getUserInfo();u.setInputValues(e),E.resetValidation()}));const d=new l("#add-card__modal",(function(e){(function(e){const t=p(e);h.addItem(t)})(e),d.close(),r.reset(),f.resetValidation()}));d.setEventListeners(),n.addEventListener("click",(()=>{d.open()}));const h=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=p(e);h.addItem(t)}},".elements");function p(e){return new t(e,"#card-template",m).generateCard()}h.renderItems();const E=new e(o,i),f=new e(o,r);E.enableValidation(),f.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,